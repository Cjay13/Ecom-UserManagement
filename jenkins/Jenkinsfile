pipeline{
    agent any
    environment {
        DOCKER_REPO="cjherath"
    }

    tools {
        maven "MAVEN3"
    }

    stages {
        stage('Build') {
            steps {
                sh 'mvn clean install -DskipTests'
            }
        }

//         stage('Unit  test'){
//             steps {
//                 sh 'mvn test'
//             }
//         }
//
//         stage('Sonar Analysis') {
//
//             environment {
//                 scannerHome = tool 'sonar4'
//             }
//             steps {
//                 withSonarQubeEnv('cjay-sonar') {
//                     sh '''${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=cjay-practice-projects_ecom-usermanagement \
//                           -Dsonar.organization=cjay-practice-projects \
//                           -Dsonar.projectName=ecom-userManagement \
//                           -Dsonar.sources=src/ \
//                           -Dsonar.java.binaries=target/test-classes/com/cjay/ecom/userManagement/UserManagementApplicationTests \
//                           -Dsonar.junit.reportsPath=target/surefire-reports/ \
//                           -Dsonar.jacoco.reportsPath=target/jacoco.exec \
//                           -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml'''
//
//                 }
//                 timeout(time: 10, unit: 'MINUTES') {
//                 waitForQualityGate abortPipeline: true
//                 }
//             }
//         }

        stage('Authenticate to DockerHub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'DOCKERHUB_ID', usernameVariable: 'DOCKERHUB_USERNAME', passwordVariable: 'DOCKERHUB_PASSWORD')]) {
                    sh '''
                        docker login -u ${DOCKERHUB_USERNAME} -p ${DOCKERHUB_PASSWORD}
                    '''
                }

            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    sh 'chmod +x jenkins/scripts/build.sh' //grant execute permission
                    sh 'jenkins/scripts/build.sh'
                }
            }
        }

        stage('Deploy to AWS EKS') {
            steps {
                script {
                    sh 'chmod +x jenkins/scripts/deploy.sh' //grant execute permission
                    sh 'jenkins/scripts/deploy.sh'
                }
            }
        }

        stage('CleanWS') {
            steps {
                cleanWs()
            }
        }
    }
}